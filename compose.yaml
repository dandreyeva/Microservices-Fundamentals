services:
  psql-db-resource:
    image: postgres:alpine3.20
    container_name: postgres-resource
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER_R}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_R}
      - POSTGRES_DB=${POSTGRES_DB_R}
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data-resource:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    dns:
      - 10.0.2.20
    networks:
      - ls

  psql-db-song:
    image: postgres:alpine3.20
    container_name: postgres-song
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER_S}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_S}
      - POSTGRES_DB=${POSTGRES_DB_S}
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data-song:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    dns:
      - 10.0.2.20
    networks:
      - ls

  resource-proc-app:
    container_name: resource_proc_app
    build:
      context: microservice-resource-processor
      dockerfile: Dockerfile
    links:
      - rabbitmq
    ports:
      - "9292:9292"
    environment:
      - RABBIT_HOST=rabbitmq
    depends_on:
      - rabbitmq
    dns:
      - 10.0.2.20
    networks:
      - ls

  resource-app:
    container_name: resource_app
    build:
      context: microservice-resource
      dockerfile: Dockerfile
    links:
      - rabbitmq
    ports:
      - "9090:9090"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL_RESOURCE}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME_RESOURCE}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD_RESOURCE}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO_RESOURCE}
      - RABBIT_HOST=rabbitmq
    depends_on:
      - psql-db-resource
    dns:
      - 10.0.2.20
    networks:
      - ls

  song-app:
    container_name: song_app
    build:
      context: microservice-song
      dockerfile: Dockerfile
    ports:
      - "8081-8090:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL_SONG}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME_SONG}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD_SONG}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO_SONG}
    depends_on:
      - psql-db-song
    dns:
      - 10.0.2.20
    networks:
      - ls

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack:s3-latest
    ports:
       - "127.0.0.1:4566:4566"
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - ./init-scripts/s3/init-s3.py:/etc/localstack/init/ready.d/init-s3.py
    networks:
       ls:
         ipv4_address: 10.0.2.20

  rabbitmq:
    image: rabbitmq:3.8.3-management-alpine
    ports:
      - "5672:5672" #JMS Port
      - "15672:15672"
    dns:
      - 10.0.2.20
    networks:
      - ls


networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24
